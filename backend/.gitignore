# Virtual Environment
.venv/
venv/
*.env

# Python cache files
__pycache__/
*.pyc
*.pyo
*.pyd

# IDE and editor directories
.vscode/
.idea/

# Build artifacts
/dist/
/build/
*.egg-info/

# Static files generated by the app
/backend/static/videos/
```

### ## Step 2: Tell Git to Stop Tracking the `.venv` Folder

Now that Git knows to ignore `.venv` in the future, we need to remove the one it's already tracking from its index.

In your terminal, from your project's root directory (`c/build`), run this command:

```bash
git rm -r --cached backend/.venv
```
* `git rm`: The remove command.
* `-r`: Means "recursive" (to remove the whole folder).
* `--cached`: This is the crucial part. It tells Git to **only remove it from the tracking index**, without deleting the actual folder from your computer.

### ## Step 3: Commit and Push (The Final Commands)

Now that everything is clean, you can run the standard Git commands from your project's root directory (`c/build`).

1.  **Stage all your changes (including the new `.gitignore` file):**
    ```bash
    git add .
    ```

2.  **Commit the changes with a clear message:**
    ```bash
    git commit -m "Fix refine bug, add .gitignore, and untrack venv"
    ```

3.  **Push your clean commit to GitHub:**
    ```bash
    git push origin main
    
